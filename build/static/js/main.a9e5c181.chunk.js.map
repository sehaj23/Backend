{"version":3,"sources":["components/common/MyInput.tsx","components/pages/login.tsx","components/common/MyNavBar.tsx","components/common/MyRadioBtn.tsx","components/helper/MyHttp.ts","components/pages/admin/create-admin.tsx","components/pages/home.tsx","components/pages/logout.tsx","components/pages/admin/view-admin.tsx","components/common/MyTextarea.tsx","components/pages/event/add-event.tsx","components/history.ts","components/pages/event/view-event.tsx","components/pages/vendor/add-vendor.tsx","components/pages/vendor/view-vendor.tsx","components/pages/vendor/vendor-detail.tsx","components/pages/fashion-designer/add-fashion-designer.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["MyInput","props","Fragment","className","htmlFor","id","label","type","onKeyDown","name","value","onChange","placeholder","required","undefined","Login","useState","username","setUsername","password","setPassword","loggedIn","setLoggedIn","error","setError","e","a","preventDefault","trim","data","Axios","post","res","status","token","localStorage","setItem","message","useEffect","getItem","to","onSubmit","currentTarget","MyNavBar","data-toggle","data-target","aria-controls","aria-expanded","aria-label","href","aria-haspopup","aria-labelledby","MyRadioBtn","checked","MyHttp","endpoint","headers","put","get","CreateAdmin","role","setRole","setMessage","Home","style","width","aria-valuenow","ariaValuemin","ariaValuemax","Logout","removeItem","ViewAdmin","state","editId","editUsername","editRole","show","handleClose","bind","saveData","console","log","this","setState","gotData","find","d","dataToSend","dataIndex","findIndex","map","key","onClick","setEditData","getData","Modal","onHide","Header","closeButton","Title","Body","Footer","Button","variant","scope","renderData","React","Component","MyTextArea","Form","Group","controlId","Label","Control","as","rows","AddEvent","setName","description","setDescription","entryProcedure","setEntryProcedure","exhibitionHouse","setExhibitionHouse","startDate","setStartDate","endDate","setEndDate","location","setLocation","document","getElementById","reset","history","createBrowserHistory","ViewEvent","start_date","end_date","entry_procedure","exhibition_house","erorr","moment","format","Date","getDate","b","i","AddVendor","email","contact_number","premium","ViewVendor","linkTo","VendorDetail","match","params","float","AddFashionDesigner","brand_name","designer_name","start_price","end_price","outfit_types","outfit_type_text","speciality","insta_link","fb_link","start_working_hours","end_working_hours","vendor_id","onOutfitAdded","event","keyCode","push","length","ot","renderOutfits","App","exact","path","component","Boolean","window","hostname","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.a9e5c181.chunk.js","sourcesContent":["import React from \"react\"\n\nexport interface MyInputI {\n    name?: string\n    value?: string\n    onChange: ((event: React.ChangeEvent<HTMLInputElement>) => void) | undefined\n    id?: string\n    label?: string\n    placeholder?: string\n    type?: string\n    onKeyDown?: ((event: React.KeyboardEvent<HTMLInputElement>) => void) | undefined\n    required?: boolean\n}\n\nconst MyInput = (props: MyInputI) => {\n\n    return (\n        <React.Fragment>\n            <div className=\"form-group\">\n                <label htmlFor={props.id}>{props.label}:</label>\n                <input type={(props.type) ? props.type : \"text\"} onKeyDown={props.onKeyDown}  id={props.id} name={props.name} value={props.value} onChange={props.onChange} placeholder={props.placeholder} className=\"form-control\"  required={(props.required !== undefined) ? props.required : true} />\n            </div>\n            <br />\n        </React.Fragment>\n    )\n}\n\nexport default MyInput\n","import React, { FormEvent, useState, useEffect } from \"react\"\nimport MyInput from \"../common/MyInput\"\nimport Axios from \"axios\"\nimport { Redirect } from \"react-router-dom\"\n\nconst Login = () => {\n\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n  const [loggedIn, setLoggedIn] = useState(false)\n  const [error, setError] = useState('')\n\n  useEffect(() => {\n    if (localStorage.getItem(\"token\")) setLoggedIn(true)\n  })\n\n\n  async function login(e: FormEvent<HTMLFormElement>) {\n    e.preventDefault()\n    if (username.trim() === '' && password.trim() === '') {\n      setError(\"Enter all details\")\n      return\n    }\n\n    const data = {\n      username,\n      password\n    }\n    try {\n      const res = await Axios.post(\"/api/login\", data)\n      if (res.status === 200) {\n        const token = res.data.token\n        localStorage.setItem(\"token\", token)\n        setLoggedIn(true)\n      } else {\n        setError(res.data.message)\n      }\n\n    } catch (error) {\n      setError(error.message)\n    }\n\n\n  }\n\n  if (loggedIn) {\n    return <Redirect to=\"/home\" />\n  }\n\n  return (\n    <div className=\"container\">\n      <div className=\"jumbotron justify-content-md-center\">\n        <h1 className=\"text-center\">Zattire</h1>\n        <form onSubmit={login}>\n          <MyInput label=\"Username\" onChange={(e: React.ChangeEvent<HTMLInputElement>) => setUsername(e.currentTarget.value)} />\n          <MyInput label=\"Password\" type=\"password\" onChange={(e: React.ChangeEvent<HTMLInputElement>) => setPassword(e.currentTarget.value)} />\n          <button type=\"submit\" className=\"btn btn-success\">Submit</button>\n          <p className=\"text-danger\">{error}</p>\n        </form>\n      </div>\n    </div>\n  );\n}\n\nexport default Login","\nimport React from \"react\"\nimport { Link } from \"react-router-dom\"\n\nconst MyNavBar = () => {\n    return (\n        <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n            <Link className=\"navbar-brand\" to=\"/home\">Admin Panel</Link>\n            <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                <span className=\"navbar-toggler-icon\"></span>\n            </button>\n\n            <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n                <ul className=\"navbar-nav mr-auto\">\n                    <li className=\"nav-item dropdown\">\n                        <a className=\"nav-link dropdown-toggle\" href=\"#\" id=\"navbarDropdownMenuLink\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                            Admin\n                        </a>\n                        <div className=\"dropdown-menu\" aria-labelledby=\"navbarDropdownMenuLink\">\n                        <Link className=\"dropdown-item\" to=\"/admin/create\">Add</Link>\n                        <Link className=\"dropdown-item\" to=\"/admin/view\">Edit</Link>\n\n                        </div>\n                    </li>\n                    <li className=\"nav-item dropdown\">\n                        <a className=\"nav-link dropdown-toggle\" href=\"#\" id=\"navbarDropdownMenuLink\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                            Vendor\n                        </a>\n                        <div className=\"dropdown-menu\" aria-labelledby=\"navbarDropdownMenuLink\">\n                        <Link className=\"dropdown-item\" to=\"/vendor/create\">Add</Link>\n                        <Link className=\"dropdown-item\" to=\"/vendor/view\">Edit</Link>\n\n                        </div>\n                    </li>\n                    <li className=\"nav-item dropdown\">\n                        <a className=\"nav-link dropdown-toggle\" href=\"#\" id=\"navbarDropdownMenuLink\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                            Event\n                        </a>\n                        <div className=\"dropdown-menu\" aria-labelledby=\"navbarDropdownMenuLink\">\n                        <Link className=\"dropdown-item\" to=\"/event/create\">Add</Link>\n                        <Link className=\"dropdown-item\" to=\"/event/view\">Edit</Link>\n\n                        </div>\n                    </li>\n                    <li className=\"nav-item\">\n                        <Link className=\"nav-link\" to=\"/logout\">Logout</Link>\n                    </li>\n                </ul>\n\n            </div>\n        </nav>\n    )\n}\n\nexport default MyNavBar","import React from \"react\"\n\nexport interface MyRadioBtnI {\n    name: string\n    checked: boolean\n    label: string\n    value: string\n    onChange: ((event: React.ChangeEvent<HTMLInputElement>) => void) | undefined\n}\n\nconst MyRadioBtn = (props: MyRadioBtnI) => {\n\n    return (\n        <div className=\"form-check-inline\">\n            <label className=\"form-check-label\">\n                <input type=\"radio\" onChange={props.onChange} value={props.value} className=\"form-check-input\" name={props.name} checked={props.checked} />{props.label}\n            </label>\n        </div>\n    )\n}\n\nexport default MyRadioBtn","import Axios from \"axios\"\n\n\nexport default class MyHttp {\n\n    static post = (endpoint: string, data: any) => {\n        const token = localStorage.getItem(\"token\")\n        const headers = {\n            \"authorization\": `Bearer ${token}`\n        }\n        \n        return Axios.post(endpoint, data, {\n            headers: headers\n        })\n    }\n\n    static put = (endpoint: string, data: any) => {\n        const token = localStorage.getItem(\"token\")\n        const headers = {\n            \"authorization\": `Bearer ${token}`\n        }\n        \n        return Axios.put(endpoint, data, {\n            headers: headers\n        })\n    }\n\n    static get = (endpoint: string) => {\n        const token = localStorage.getItem(\"token\")\n        const headers = {\n            \"authorization\": `Bearer ${token}`\n        }\n        \n        // return fetch(endpoint, {headers : headers})\n        return Axios.get(endpoint, {\n            headers: headers\n        })\n    }\n\n}","import React, { useState, FormEvent } from \"react\"\nimport Axios from \"axios\"\nimport { AdminI } from \"./admin-interfaces\"\nimport MyInput from \"../../common/MyInput\"\nimport MyNavBar from \"../../common/MyNavBar\"\nimport MyRadioBtn from \"../../common/MyRadioBtn\"\nimport MyHttp from \"../../helper/MyHttp\"\n\nconst CreateAdmin = () => {\n    const [username, setUsername] = useState('')\n    const [password, setPassword] = useState('')\n    const [role, setRole] = useState('admin')\n    const [error, setError] = useState('')\n    const [message, setMessage] = useState('')\n\n    async function postData(e: FormEvent<HTMLFormElement>) {\n        e.preventDefault()\n        setMessage('')\n        setError('')\n        if (username.trim() === '' && password.trim() === '' && role.trim() === '') {\n            setError(\"Enter all details\")\n            return\n        }\n        const data: AdminI = {\n            username,\n            password,\n            role\n        }\n        const res = await MyHttp.post(\"/api/login/create\", data)\n        if (res.status == 200) {\n            setMessage('Added successfully.')\n            setUsername('')\n            setPassword('')\n            setRole('admin')\n        } else {\n            const error: string = res.data.message\n            if (!error) {\n                setError('Error')\n                return\n            }\n            setError(error)\n        }\n    }\n    return (\n        <React.Fragment>\n            <MyNavBar />\n            <div className=\"container\">\n                <div className=\"jumbotron\">\n                    <form onSubmit={postData}>\n                        <h1>Add Admin</h1>\n                        <MyInput value={username} onChange={(e: React.ChangeEvent<HTMLInputElement>) => setUsername(e.currentTarget.value)} label=\"Username\" />\n                        <MyInput value={password} onChange={(e: React.ChangeEvent<HTMLInputElement>) => setPassword(e.currentTarget.value)} label=\"Password\" />\n                        <p>Role:</p>\n                        <MyRadioBtn name=\"role\" onChange={(e:  React.ChangeEvent<HTMLInputElement>) => setRole(e.currentTarget.value)} label=\"Admin\" value=\"admin\" checked={(role === \"admin\")} />\n                        <MyRadioBtn name=\"role\" onChange={(e:  React.ChangeEvent<HTMLInputElement>) => setRole(e.currentTarget.value)} label=\"Sub-Admin\" value=\"sub-admin\"  checked={(role === \"sub-admin\")}/>\n                        <br />\n                        <br />\n                        <button className=\"btn btn-success\" type=\"submit\">Submit</button>\n                        <p className=\"text-danger\">{error}</p>\n                        <p className=\"text-success\">{message}</p>\n                    </form>\n                </div>\n            </div>\n        </React.Fragment>\n    )\n}\n\nexport default CreateAdmin","import React from \"react\"\nimport MyNavBar from \"../common/MyNavBar\"\n\nconst Home = () => {\n  return (\n    <React.Fragment>\n      <MyNavBar />\n      <div className=\"container\">\n        <br />\n        <div className=\"row\">\n          <div className=\"col-xl-3 col-md-6 mb-4\">\n            <div className=\"card border-left-primary shadow h-100 py-2\">\n              <div className=\"card-body\">\n                <div className=\"row no-gutters align-items-center\">\n                  <div className=\"col mr-2\">\n                    <div className=\"text-xs font-weight-bold text-primary text-uppercase mb-1\">Earnings (Monthly)</div>\n                    <div className=\"h5 mb-0 font-weight-bold text-gray-800\">$40,000</div>\n                  </div>\n                  <div className=\"col-auto\">\n                    <i className=\"fas fa-calendar fa-2x text-gray-300\"></i>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div className=\"col-xl-3 col-md-6 mb-4\">\n            <div className=\"card border-left-success shadow h-100 py-2\">\n              <div className=\"card-body\">\n                <div className=\"row no-gutters align-items-center\">\n                  <div className=\"col mr-2\">\n                    <div className=\"text-xs font-weight-bold text-success text-uppercase mb-1\">Earnings (Annual)</div>\n                    <div className=\"h5 mb-0 font-weight-bold text-gray-800\">$215,000</div>\n                  </div>\n                  <div className=\"col-auto\">\n                    <i className=\"fas fa-dollar-sign fa-2x text-gray-300\"></i>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div className=\"col-xl-3 col-md-6 mb-4\">\n            <div className=\"card border-left-info shadow h-100 py-2\">\n              <div className=\"card-body\">\n                <div className=\"row no-gutters align-items-center\">\n                  <div className=\"col mr-2\">\n                    <div className=\"text-xs font-weight-bold text-info text-uppercase mb-1\">Tasks</div>\n                    <div className=\"row no-gutters align-items-center\">\n                      <div className=\"col-auto\">\n                        <div className=\"h5 mb-0 mr-3 font-weight-bold text-gray-800\">50%</div>\n                      </div>\n                      <div className=\"col\">\n                        <div className=\"progress progress-sm mr-2\">\n                          {/* \n                //@ts-ignore   */}\n                          <div className=\"progress-bar bg-info\" role=\"progressbar\" style={{ width: \"50%\" }} aria-valuenow=\"50\" ariaValuemin=\"0\" ariaValuemax=\"100\"></div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"col-auto\">\n                    <i className=\"fas fa-clipboard-list fa-2x text-gray-300\"></i>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div className=\"col-xl-3 col-md-6 mb-4\">\n            <div className=\"card border-left-warning shadow h-100 py-2\">\n              <div className=\"card-body\">\n                <div className=\"row no-gutters align-items-center\">\n                  <div className=\"col mr-2\">\n                    <div className=\"text-xs font-weight-bold text-warning text-uppercase mb-1\">Pending Requests</div>\n                    <div className=\"h5 mb-0 font-weight-bold text-gray-800\">18</div>\n                  </div>\n                  <div className=\"col-auto\">\n                    <i className=\"fas fa-comments fa-2x text-gray-300\"></i>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </React.Fragment>\n\n  )\n}\n\nexport default Home","import React, { useEffect } from \"react\"\nimport { Redirect } from \"react-router-dom\"\n\nconst Logout = () => {\n    useEffect(() => {\n        localStorage.removeItem(\"token\")\n\n    })\n\n  return (\n      <Redirect to=\"/\"/>      \n  )\n}\n\nexport default Logout","import React, { useEffect, useState } from \"react\"\nimport MyNavBar from \"../../common/MyNavBar\"\nimport MyHttp from \"../../helper/MyHttp\"\nimport { AdminI } from \"./admin-interfaces\"\nimport MyInput from \"../../common/MyInput\"\nimport MyRadioBtn from \"../../common/MyRadioBtn\"\nimport { Modal, Button } from \"react-bootstrap\"\n\ninterface ViewAdminI {\n    data: AdminI[]\n    editId: number\n    error: string\n    editUsername: string\n    editRole: string\n    show: boolean\n}\n\nclass ViewAdmin extends React.Component<any, ViewAdminI> {\n\n    constructor(props: any) {\n        super(props)\n\n        this.state = {\n            data: [],\n            editId: 0,\n            error: \"\",\n            editUsername: \"\",\n            editRole: \"\",\n            show: false,\n        }\n\n        this.handleClose = this.handleClose.bind(this)\n        this.saveData = this.saveData.bind(this)\n    }\n\n\n    async getData() {\n        try {\n            const res = await MyHttp.get(\"/api/admin\")\n\n            if (res.status === 200) {\n                console.log(res.data);\n                this.setState({\n                    data: res.data\n                })\n            }\n        } catch (error) {\n            console.log(error.message);\n        }\n    }\n\n    setEditData(id: number) {\n        this.setState({\n            editId: id\n        })\n        const gotData: AdminI | undefined = this.state.data.find((d: AdminI) => d.id === id)\n        if (gotData === undefined || gotData === null) {\n            console.log(\"Wrong Id\");\n            return\n        }\n\n        this.setState({\n            show: true,\n            editUsername: gotData!.username,\n            editRole: gotData!.role\n        })\n\n    }\n\n    async  saveData() {\n        try {\n            const dataToSend: AdminI = {\n                id: this.state.editId,\n                username: this.state.editUsername,\n                role: this.state.editRole\n            }\n            const res = await MyHttp.put(\"/api/admin\", dataToSend)\n            const gotData: AdminI = res.data\n            const dataIndex: number = this.state.data.findIndex((d: AdminI) => d.id === gotData.id)\n            console.log(gotData);\n\n            this.state.data[dataIndex] = gotData\n            console.log(this.state.data);\n            this.setState({\n                data: this.state.data,\n                show: false\n            })\n            console.log(this.state.data);\n\n        } catch (error) {\n            console.log(error.message);\n\n        }\n    }\n\n    renderData() {\n        const out = (this.state.data || []).map((d: AdminI) => {\n            return (\n                <tr key={d.id!}>\n                    <td>{d.id! + 1}</td>\n                    <td>{d.username}</td>\n                    <td>{d.role}</td>\n                    <td><button className=\"btn btn-warning\" onClick={() => {\n                        this.setEditData(d.id!)\n\n                    }}>Edit</button></td>\n                </tr>\n            )\n        })\n        return out\n    }\n\n    componentDidMount() {\n        this.getData()\n    }\n\n    handleClose() {\n        this.setState({\n            show: false\n        })\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                <MyNavBar />\n\n                <div className=\"container\">\n                    <div className=\"jumbotron\">\n                        <h1>View/Edit</h1>\n                        <Modal show={this.state.show} onHide={this.handleClose}>\n                            <Modal.Header closeButton>\n                                <Modal.Title>Modal heading</Modal.Title>\n                            </Modal.Header>\n                            <Modal.Body>\n                                <MyInput label=\"Username\" value={this.state.editUsername} onChange={(e: React.ChangeEvent<HTMLInputElement>) => this.setState({ editUsername: e.currentTarget.value })} />\n                                <label htmlFor=\"\">Role:</label><br />\n                                <MyRadioBtn name=\"role\" onChange={(e: React.ChangeEvent<HTMLInputElement>) => this.setState({ editRole: e.currentTarget.value })} label=\"Admin\" value=\"admin\" checked={(this.state.editRole === \"admin\")} />\n                                <MyRadioBtn name=\"role\" onChange={(e: React.ChangeEvent<HTMLInputElement>) => this.setState({ editRole: e.currentTarget.value })} label=\"Sub-Admin\" value=\"sub-admin\" checked={(this.state.editRole === \"sub-admin\")} />\n                            </Modal.Body>\n                            <Modal.Footer>\n                                <Button variant=\"secondary\" onClick={this.handleClose}>\n                                    Close\n                                </Button>\n                                <Button variant=\"primary\" onClick={this.saveData}>\n                                    Save Changes\n                                </Button>\n                            </Modal.Footer>\n                        </Modal>\n                        <table className=\"table\">\n                            <thead>\n                                <tr>\n                                    <th scope=\"col\">#</th>\n                                    <th scope=\"col\">Username</th>\n                                    <th scope=\"col\">Role</th>\n                                    <th scope=\"col\">Edit</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {this.renderData()}\n                            </tbody>\n                        </table>\n                    </div>\n                    <p className=\"text-danger\">{this.state.error}</p>\n                </div>\n            </React.Fragment >\n\n        )\n    }\n\n}\n\nexport default ViewAdmin","import React from \"react\"\nimport { Form } from \"react-bootstrap\"\n\nexport interface MyTextAreaI {\n    name?: string\n    value?: string\n    onChange: ((event: React.ChangeEvent<HTMLInputElement>) => void) | undefined\n    id?: string\n    label?: string\n    placeholder?: string\n    type?: string\n}\n\nconst MyTextArea = (props: MyTextAreaI) => {\n\n    return (\n        <React.Fragment>\n            <Form.Group controlId=\"exampleForm.ControlTextarea1\">\n                <Form.Label>{props.label}:</Form.Label>\n                <Form.Control name={props.name} value={props.value} onChange={props.onChange} as=\"textarea\" rows=\"3\" />\n            </Form.Group>\n        </React.Fragment>\n    )\n}\n\nexport default MyTextArea\n","\nimport React, { useState, FormEvent } from \"react\"\nimport MyNavBar from \"../../common/MyNavBar\"\nimport MyInput from \"../../common/MyInput\"\nimport { Form } from \"react-bootstrap\"\nimport MyTextArea from \"../../common/MyTextarea\"\nimport MyHttp from \"../../helper/MyHttp\"\n\nconst AddEvent = () => {\n    const [name, setName] = useState('')\n    const [description, setDescription] = useState('')\n    const [entryProcedure, setEntryProcedure] = useState('')\n    const [exhibitionHouse, setExhibitionHouse] = useState('')\n    const [startDate, setStartDate] = useState('')\n    const [endDate, setEndDate] = useState('')\n    const [location, setLocation] = useState('')\n    const [error, setError] = useState('')\n    const [message, setMessage] = useState('')\n\n\n    async function submitData(e: FormEvent<HTMLFormElement>) {\n        e.preventDefault()\n        if (entryProcedure.trim() === '' && description.trim() === '') {\n            setError(\"Enter all details\")\n            return\n        }\n\n        const data = {\n            name,\n            description,\n            entryProcedure,\n            exhibitionHouse,\n            startDate,\n            endDate,\n            location,\n        }\n        try {\n            const res = await MyHttp.post(\"/api/event\", data)\n            if (res.status === 200) {\n                console.log(res.data);\n                setMessage('Added successfully.')\n                // @ts-ignore\n                document!.getElementById('my-form')!.reset()\n            } else {\n                setError(res.data.message)\n            }\n\n        } catch (error) {\n            setError(error.message)\n        }\n    }\n\n    return (\n        <React.Fragment>\n            <MyNavBar />\n            <div className=\"container\">\n                <div className=\"jumbotron\">\n                    <h1>Add</h1>\n                    <form onSubmit={submitData} id=\"my-form\">\n\n                        <MyInput label=\"Name\" onChange={(e: React.ChangeEvent<HTMLInputElement>) => setName(e.currentTarget.value)} />\n                        <MyTextArea label=\"Description\" onChange={(e: React.ChangeEvent<HTMLInputElement>) => setDescription(e.currentTarget.value)} />\n                        <MyTextArea label=\"Entry Procedure\" onChange={(e: React.ChangeEvent<HTMLInputElement>) => setEntryProcedure(e.currentTarget.value)} />\n                        <MyInput label=\"Exhibition House\" onChange={(e: React.ChangeEvent<HTMLInputElement>) => setExhibitionHouse(e.currentTarget.value)} />\n\n                        <MyInput label=\"Start Date\" type=\"date\" onChange={(e: React.ChangeEvent<HTMLInputElement>) => setStartDate(e.currentTarget.value)} />\n                        <MyInput label=\"End Date\" type=\"date\" onChange={(e: React.ChangeEvent<HTMLInputElement>) => setEndDate(e.currentTarget.value)} />\n                        <MyInput label=\"Location\" onChange={(e: React.ChangeEvent<HTMLInputElement>) => setLocation(e.currentTarget.value)} />\n                        <button type=\"submit\" className=\"btn btn-success\">Submit</button>\n                        <p className=\"text-danger\">{error}</p>\n                        <p className=\"text-success\">{message}</p>\n\n                    </form>\n\n                </div>\n            </div>\n        </React.Fragment>\n\n    )\n}\n\nexport default AddEvent","import { createBrowserHistory } from \"history\"\nconst history = createBrowserHistory()\n\nexport default history","import React, { useEffect, useState } from \"react\"\nimport MyNavBar from \"../../common/MyNavBar\"\nimport MyHttp from \"../../helper/MyHttp\"\nimport MyInput from \"../../common/MyInput\"\nimport MyRadioBtn from \"../../common/MyRadioBtn\"\nimport { Modal, Button } from \"react-bootstrap\"\nimport EventI from \"./event-interface\"\nimport MyTextArea from \"../../common/MyTextarea\"\nimport  moment from 'moment';\n\ninterface ViewEventI extends EventI {\n    data: EventI[]\n    show: boolean\n    erorr: string\n}\n\nclass ViewEvent extends React.Component<any, ViewEventI> {\n\n    getDate(d: Date): string{\n        return moment(d).format(\"YYYY-MM-DD\")\n    }\n\n    constructor(props: any) {\n        super(props)\n\n        this.state = {\n            data: [],\n            id: 0,\n            name: \"\",\n            start_date: \"\",\n            end_date: \"\",\n            location: \"\",\n            entry_procedure: \"\",\n            exhibition_house: \"\",\n            description: \"\",\n            show: false,\n            erorr: \"\"\n        }\n\n        this.handleClose = this.handleClose.bind(this)\n        this.saveData = this.saveData.bind(this)\n        this.onChange = this.onChange.bind(this)\n    }\n\n\n    async getData() {\n        try {\n            const res = await MyHttp.get(\"/api/event\")\n\n            if (res.status === 200) {\n                console.log(res.data);\n                if(res.data !== null){\n                    let data: EventI[] = res.data\n                    // var options = { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' };\n\n                    data = data.map((d) => {\n                        //@ts-ignore\n                        const a = new Date(d.start_date)\n                        d.start_date = this.getDate(a)\n\n                        const b = new Date(d.end_date)\n                        d.end_date = this.getDate(b)// b.toLocaleDateString(\"en-us\")\n                        return d\n                    })\n                \n                    this.setState({\n                        data: res.data\n                    })\n                }\n            }\n        } catch (error) {\n            console.log(error.message);\n        }\n    }\n\n    setEditData(id: number) {\n        this.setState({\n            id: id\n        })\n        const gotData: EventI | undefined = this.state.data.find((d: EventI) => d.id === id)\n        if (gotData === undefined || gotData === null) {\n            console.log(\"Wrong Id\");\n            return\n        }\n\n        this.setState({\n            show: true,\n            name: gotData.name,\n            start_date: gotData.start_date,\n            end_date: gotData.end_date,\n            location: gotData.location,\n            entry_procedure: gotData.entry_procedure,\n            exhibition_house: gotData.exhibition_house,\n            description: gotData.description,\n        })\n\n    }\n\n    async  saveData() {\n        try {\n            const dataToSend: EventI = {\n                id: this.state.id,\n                name: this.state.name,\n                start_date: this.state.start_date,\n                end_date: this.state.end_date,\n                location: this.state.location,\n                entry_procedure: this.state.entry_procedure,\n                exhibition_house: this.state.exhibition_house,\n                description: this.state.description,\n            }\n            const res = await MyHttp.put(\"/api/event\", dataToSend)\n            const gotData: EventI = res.data\n            const dataIndex: number = this.state.data.findIndex((d: EventI) => d.id === gotData.id)\n            console.log(gotData);\n\n            this.state.data[dataIndex] = gotData\n            console.log(this.state.data);\n            this.setState({\n                data: this.state.data,\n                show: false\n            })\n            console.log(this.state.data);\n\n        } catch (error) {\n            console.log(error.message);\n\n        }\n    }\n\n    renderData() {\n        const out = (this.state.data || []).map((d: EventI, i: number) => {\n            return (\n                <tr key={d.id!}>\n                    <td>{i + 1}</td>\n                    <td>{d.name}</td>\n                    <td>{d.description}</td>\n                    <td>{d.start_date}</td>\n                    <td>{d.end_date}</td>\n                    <td>{d.location}</td>\n                    <td>{d.entry_procedure}</td>\n                    <td>{d.exhibition_house}</td>\n                    <td><button className=\"btn btn-warning\" onClick={() => {\n                        this.setEditData(d.id!)\n\n                    }}>Edit</button></td>\n                </tr>\n            )\n        })\n        return out\n    }\n\n    componentDidMount() {\n        this.getData()\n    }\n\n    handleClose() {\n        this.setState({\n            show: false\n        })\n    }\n\n    onChange(e: React.ChangeEvent<HTMLInputElement>) {\n        console.log(e.currentTarget.value);\n        \n        this.setState({\n            ...this.state,\n            [e.currentTarget.name]: e.currentTarget.value\n        })\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                <MyNavBar />\n                <div className=\"container\">\n                    <div className=\"jumbotron\">\n                        <h1>View/Edit</h1>\n                        <Modal show={this.state.show} onHide={this.handleClose}>\n                            <Modal.Header closeButton>\n                                <Modal.Title>Modal heading</Modal.Title>\n                            </Modal.Header>\n                            <Modal.Body>\n                                <MyInput label=\"Name\" name=\"name\" value={this.state.name} onChange={this.onChange} />\n                                <MyTextArea label=\"Description\" name=\"description\" value={this.state.description} onChange={this.onChange} />\n                                <MyTextArea label=\"Entry Procedure\" name=\"entry_procedure\" value={this.state.entry_procedure} onChange={this.onChange} />\n                                <MyInput label=\"Exhibition House\" name=\"exhibition_house\" value={this.state.exhibition_house} onChange={this.onChange} />\n\n                                <MyInput label=\"Start Date\" type=\"date\" name=\"start_date\" value={this.state.start_date as string} onChange={this.onChange} />\n                                <MyInput label=\"End Date\" type=\"date\" name=\"end_date\" value={this.state.end_date as string} onChange={this.onChange} />\n                                <MyInput label=\"Location\" name=\"location\" value={this.state.location} onChange={this.onChange} />\n                            </Modal.Body>\n                            <Modal.Footer>\n                                <Button variant=\"secondary\" onClick={this.handleClose}>\n                                    Close\n                                </Button>\n                                <Button variant=\"primary\" onClick={this.saveData}>\n                                    Save Changes\n                                </Button>\n                            </Modal.Footer>\n                        </Modal>\n                        <table className=\"table\">\n                            <thead>\n                                <tr>\n                                    <th scope=\"col\">#</th>\n                                    <th scope=\"col\">Name</th>\n                                    <th scope=\"col\">Desc</th>\n                                    <th scope=\"col\">Start Date</th>\n                                    <th scope=\"col\">End Date</th>\n                                    <th scope=\"col\">Location</th>\n                                    <th scope=\"col\">Entry Procedure</th>\n                                    <th scope=\"col\">Exhibition Hose</th>\n                                    <th scope=\"col\">Edit</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {this.renderData()}\n                            </tbody>\n                        </table>\n                    </div>\n                    <p className=\"text-danger\">{this.state.erorr}</p>\n                </div>\n            </React.Fragment >\n\n        )\n    }\n\n}\n\nexport default ViewEvent","import React, { Component, FormEvent } from 'react'\nimport MyNavBar from '../../common/MyNavBar'\nimport MyInput from '../../common/MyInput'\nimport MyTextArea from '../../common/MyTextarea'\nimport MyHttp from '../../helper/MyHttp'\n\nexport interface VendorI{\n    id?: number | null\n    name: string\n    email: string\n    password?: string\n    contact_number: string\n    premium?: boolean\n    error?: string\n    message?: string\n}\n\nexport default class AddVendor extends Component<any, VendorI> {\n    constructor(props: any) {\n        super(props)\n    \n        this.state = {\n            name: \"\",\n            email: \"\",\n            password: \"\",\n            contact_number: \"\",\n            premium: false,\n            error: \"\",\n            message: \"\"\n        }\n\n        this.saveData = this.saveData.bind(this)\n        this.onChange = this.onChange.bind(this)\n    }\n\n    onChange(e: React.ChangeEvent<HTMLInputElement>) {\n        console.log(e.currentTarget.value);\n        \n        this.setState({\n            ...this.state,\n            [e.currentTarget.name]: e.currentTarget.value\n        })\n    }\n\n    async saveData(e: FormEvent<HTMLFormElement>) {\n        e.preventDefault()\n        const {name, email, password, contact_number} = this.state\n\n        const data: VendorI = {\n            name, email, password, contact_number\n        }\n        try {\n            const res = await MyHttp.post(\"/api/vendor\", data)\n            if (res.status === 200) {\n                console.log(res.data);\n                this.setState({\n                    message:'Added successfully.'\n                })\n                // @ts-ignore\n                document!.getElementById('my-form')!.reset()\n            } else {\n                this.setState({\n                    error: res.data.message\n                })\n            }\n\n        } catch (error) {\n            this.setState({\n                error: error.message\n            })\n        }\n    }\n\n    \n    render() {\n        return (\n            <React.Fragment>\n            <MyNavBar />\n            <div className=\"container\">\n                <div className=\"jumbotron\">\n                    <h1>Add</h1>\n                    <form onSubmit={this.saveData} id=\"my-form\">\n\n                        <MyInput label=\"Name\" name=\"name\" onChange={this.onChange} />\n                        <MyInput label=\"Email\" name=\"email\" onChange={this.onChange} />\n                        <MyInput label=\"Password\" name=\"password\" type=\"password\" onChange={this.onChange} />\n                        <MyInput label=\"Contact Number\" name=\"contact_number\" onChange={this.onChange} />\n                        \n                        <button type=\"submit\" className=\"btn btn-success\">Submit</button>\n                        <p className=\"text-danger\">{this.state.error}</p>\n                        <p className=\"text-success\">{this.state.message}</p>\n\n                    </form>\n\n                </div>\n            </div>\n        </React.Fragment>\n        )\n    }\n}\n","import React, { useEffect, useState } from \"react\"\nimport MyNavBar from \"../../common/MyNavBar\"\nimport MyHttp from \"../../helper/MyHttp\"\nimport MyInput from \"../../common/MyInput\"\nimport MyRadioBtn from \"../../common/MyRadioBtn\"\nimport { Modal, Button } from \"react-bootstrap\"\nimport MyTextArea from \"../../common/MyTextarea\"\nimport  moment from 'moment';\nimport { VendorI } from \"./add-vendor\"\nimport { Link } from \"react-router-dom\"\n\ninterface ViewVendorI extends VendorI {\n    data: VendorI[]\n    show: boolean\n    erorr: string\n}\n\nclass ViewVendor extends React.Component<any, ViewVendorI> {\n\n\n    constructor(props: any) {\n        super(props)\n\n        this.state = {\n            data: [],\n            id: 0,\n            name: \"\",\n            email: \"\",\n            contact_number: \"\",\n            show: false,\n            erorr: \"\"\n        }\n\n        this.handleClose = this.handleClose.bind(this)\n        this.saveData = this.saveData.bind(this)\n        this.onChange = this.onChange.bind(this)\n    }\n\n\n    async getData() {\n        try {\n            const res = await MyHttp.get(\"/api/vendor\")\n\n            if (res.status === 200) {\n                console.log(res.data);\n                if(res.data !== null){\n                    const data: VendorI[] = res.data\n                    this.setState({\n                        data: res.data\n                    })\n                }\n            }\n        } catch (error) {\n            this.setState({\n                error: error.message\n            })\n        }\n    }\n\n    setEditData(id: number) {\n        this.setState({\n            id: id\n        })\n        const gotData: VendorI | undefined = this.state.data.find((d: VendorI) => d.id === id)\n        if (gotData === undefined || gotData === null) {\n            console.log(\"Wrong Id\");\n            return\n        }\n\n        this.setState({\n            show: true,\n            name: gotData.name,\n            email: gotData.email,\n            contact_number: gotData.contact_number\n        })\n\n    }\n\n    async  saveData() {\n        try {\n            const dataToSend: VendorI = {\n                id: this.state.id,\n                name: this.state.name,\n                email: this.state.email,\n                contact_number: this.state.contact_number\n            }\n            const res = await MyHttp.put(\"/api/vendor\", dataToSend)\n            const gotData: VendorI = res.data\n            const dataIndex: number = this.state.data.findIndex((d: VendorI) => d.id === gotData.id)\n            console.log(gotData);\n\n            this.state.data[dataIndex] = gotData\n            console.log(this.state.data);\n            this.setState({\n                data: this.state.data,\n                show: false\n            })\n            console.log(this.state.data);\n\n        } catch (error) {\n            console.log(error.message);\n\n        }\n    }\n\n    renderData() {\n        const out = (this.state.data || []).map((d: VendorI, i: number) => {\n            const linkTo = `/vendor/detail/${d.id}`\n            return (\n                <tr key={d.id!}>\n                    <td>{i + 1}</td>\n                    <td> <Link to={linkTo}>  {d.name} </Link> </td>\n                    <td>{d.email}</td>\n                    <td>{d.contact_number}</td>\n                    <td><button className=\"btn btn-warning\" onClick={() => {\n                        this.setEditData(d.id!)\n\n                    }}>Edit</button></td>\n                </tr>\n            )\n        })\n        return out\n    }\n\n    componentDidMount() {\n        this.getData()\n    }\n\n    handleClose() {\n        this.setState({\n            show: false\n        })\n    }\n\n    onChange(e: React.ChangeEvent<HTMLInputElement>) {\n        console.log(e.currentTarget.value);\n        \n        this.setState({\n            ...this.state,\n            [e.currentTarget.name]: e.currentTarget.value\n        })\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                <MyNavBar />\n                <div className=\"container\">\n                    <div className=\"jumbotron\">\n                        <h1>View/Edit</h1>\n                        <Modal show={this.state.show} onHide={this.handleClose}>\n                            <Modal.Header closeButton>\n                                <Modal.Title>Modal heading</Modal.Title>\n                            </Modal.Header>\n                            <Modal.Body>\n                                <MyInput label=\"Name\" name=\"name\" value={this.state.name} onChange={this.onChange} />\n                                <MyInput label=\"Email\" name=\"email\" value={this.state.email} onChange={this.onChange} />\n                                <MyInput label=\"Contact Number\" name=\"contact_number\" value={this.state.contact_number} onChange={this.onChange} />\n                            </Modal.Body>\n                            <Modal.Footer>\n                                <Button variant=\"secondary\" onClick={this.handleClose}>\n                                    Close\n                                </Button>\n                                <Button variant=\"primary\" onClick={this.saveData}>\n                                    Save Changes\n                                </Button>\n                            </Modal.Footer>\n                        </Modal>\n                        <table className=\"table\">\n                            <thead>\n                                <tr>\n                                    <th scope=\"col\">#</th>\n                                    <th scope=\"col\">Name</th>\n                                    <th scope=\"col\">Email</th>\n                                    <th scope=\"col\">Contact Number</th>\n                                    <th scope=\"col\">Edit</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {this.renderData()}\n                            </tbody>\n                        </table>\n                    </div>\n                    <p className=\"text-danger\">{this.state.erorr}</p>\n                </div>\n            </React.Fragment >\n\n        )\n    }\n\n}\n\nexport default ViewVendor","import React, { useEffect, useState } from \"react\"\nimport MyNavBar from \"../../common/MyNavBar\"\nimport MyHttp from \"../../helper/MyHttp\"\nimport MyInput from \"../../common/MyInput\"\nimport MyRadioBtn from \"../../common/MyRadioBtn\"\nimport { Modal, Button } from \"react-bootstrap\"\nimport MyTextArea from \"../../common/MyTextarea\"\nimport moment from 'moment';\nimport { VendorI } from \"./add-vendor\"\nimport { Link } from \"react-router-dom\"\n\ninterface ViewVendorI extends VendorI {\n    data: VendorI[]\n    show: boolean\n    erorr: string\n}\n\nclass VendorDetail extends React.Component<any, ViewVendorI> {\n\n\n    constructor(props: any) {\n        super(props)\n\n        this.state = {\n            data: [],\n            id: this.props.match.params.id,\n            name: \"\",\n            email: \"\",\n            contact_number: \"\",\n            show: false,\n            erorr: \"\"\n        }\n\n        this.handleClose = this.handleClose.bind(this)\n        this.saveData = this.saveData.bind(this)\n        this.onChange = this.onChange.bind(this)\n    }\n\n\n    async getData() {\n        if (!this.state.id) return;\n        try {\n            const res = await MyHttp.get(`/api/vendor/${this.state.id}`)\n\n            if (res.status === 200) {\n                console.log(res.data);\n                if (res.data !== null) {\n                    const data: VendorI = res.data\n                    this.setState({\n                        name: data.name,\n                        email: data.email,\n                        contact_number: data.contact_number\n                    })\n                }\n            }\n        } catch (error) {\n            this.setState({\n                error: error.message\n            })\n        }\n    }\n\n    setEditData(id: number) {\n        this.setState({\n            id: id\n        })\n        const gotData: VendorI | undefined = this.state.data.find((d: VendorI) => d.id === id)\n        if (gotData === undefined || gotData === null) {\n            console.log(\"Wrong Id\");\n            return\n        }\n\n        this.setState({\n            show: true,\n            name: gotData.name,\n            email: gotData.email,\n            contact_number: gotData.contact_number\n        })\n\n    }\n\n    async  saveData() {\n        try {\n            const dataToSend: VendorI = {\n                id: this.state.id,\n                name: this.state.name,\n                email: this.state.email,\n                contact_number: this.state.contact_number\n            }\n            const res = await MyHttp.put(\"/api/vendor\", dataToSend)\n            const gotData: VendorI = res.data\n            const dataIndex: number = this.state.data.findIndex((d: VendorI) => d.id === gotData.id)\n            console.log(gotData);\n\n            this.state.data[dataIndex] = gotData\n            console.log(this.state.data);\n            this.setState({\n                data: this.state.data,\n                show: false\n            })\n            console.log(this.state.data);\n\n        } catch (error) {\n            console.log(error.message);\n\n        }\n    }\n\n    renderData() {\n        const out = (this.state.data || []).map((d: VendorI, i: number) => {\n            const linkTo = `/vendor/detail/${d.id}`\n            return (\n                <tr key={d.id!}>\n                    <td>{i + 1}</td>\n                    <td> <Link to={linkTo}>  {d.name} </Link> </td>\n                    <td>{d.email}</td>\n                    <td>{d.contact_number}</td>\n                    <td><button className=\"btn btn-warning\" onClick={() => {\n                        this.setEditData(d.id!)\n\n                    }}>Edit</button></td>\n                </tr>\n            )\n        })\n        return out\n    }\n\n    componentDidMount() {\n        this.getData()\n    }\n\n    handleClose() {\n        this.setState({\n            show: false\n        })\n    }\n\n    onChange(e: React.ChangeEvent<HTMLInputElement>) {\n        console.log(e.currentTarget.value);\n\n        this.setState({\n            ...this.state,\n            [e.currentTarget.name]: e.currentTarget.value\n        })\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                <MyNavBar />\n                <div className=\"container\">\n                    <div className=\"jumbotron\">\n                        <Modal show={this.state.show} onHide={this.handleClose}>\n                            <Modal.Header closeButton>\n                                <Modal.Title>Modal heading</Modal.Title>\n                            </Modal.Header>\n                            <Modal.Body>\n                                <MyInput label=\"Name\" name=\"name\" value={this.state.name} onChange={this.onChange} />\n                                <MyInput label=\"Email\" name=\"email\" value={this.state.email} onChange={this.onChange} />\n                                <MyInput label=\"Contact Number\" name=\"contact_number\" value={this.state.contact_number} onChange={this.onChange} />\n                            </Modal.Body>\n                            <Modal.Footer>\n                                <Button variant=\"secondary\" onClick={this.handleClose}>\n                                    Close\n                                </Button>\n                                <Button variant=\"primary\" onClick={this.saveData}>\n                                    Save Changes\n                                </Button>\n                            </Modal.Footer>\n                        </Modal>\n                        <h2>#{this.state.id ?? 0} {this.state.name}</h2>\n                        <p>{this.state.email} {this.state.contact_number}</p>\n\n                    </div>\n                    <div>\n                        <h2 style={{ float: \"left\" }} >Fashion Designer</h2>\n                        <Link style={{ float: \"right\" }} className=\"btn btn-success\" to={`/designer/create/${this.state.id}`} >+</Link>\n                        <table className=\"table\">\n                            <thead>\n                                <tr>\n                                    <th scope=\"col\">#</th>\n                                    <th scope=\"col\">Name</th>\n                                    <th scope=\"col\">Email</th>\n                                    <th scope=\"col\">Contact Number</th>\n                                    <th scope=\"col\">Edit</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                            </tbody>\n                        </table>\n                    </div>\n                    <p className=\"text-danger\">{this.state.erorr}</p>\n                </div>\n            </React.Fragment >\n\n        )\n    }\n\n}\n\nexport default VendorDetail","import React, { Component, FormEvent, ChangeEvent } from 'react'\n\nimport MyNavBar from \"../../common/MyNavBar\"\nimport MyInput from \"../../common/MyInput\"\nimport { Form } from \"react-bootstrap\"\nimport MyTextArea from \"../../common/MyTextarea\"\nimport MyHttp from \"../../helper/MyHttp\"\n\nexport interface DesignersI {\n    id?: number | null\n    brand_name: string\n    designer_name: string\n    contact_number: string\n    email: string\n    start_price: number\n    end_price: number\n    outfit_types: string[]\n    speciality: string\n    location: string\n    insta_link?: string\n    fb_link?: string\n    start_working_hours: Date | string\n    end_working_hours: Date | string\n    photo_ids?: number[]\n    approved?: boolean\n    vendor_id: number\n}\ninterface AddDesignerI extends DesignersI {\n    outfit_type_text: string\n    error: string\n    message: string\n}\n\nexport default class AddFashionDesigner extends Component<any, AddDesignerI> {\n\n    constructor(props: any) {\n        super(props)\n\n        this.state = {\n            brand_name: \"\",\n            designer_name: \"\",\n            contact_number: \"\",\n            email: \"\",\n            start_price: 0,\n            end_price: 0,\n            outfit_types: [],\n            outfit_type_text: \"\",\n            speciality: \"\",\n            location: \"\",\n            insta_link: \"\",\n            fb_link: \"\",\n            start_working_hours: \"\",\n            end_working_hours: \"\",\n            vendor_id: this.props.match.params.id,\n            error: \"\",\n            message: \"\"\n        }\n        this.saveData = this.saveData.bind(this)\n        this.onChange = this.onChange.bind(this)\n        this.onOutfitAdded = this.onOutfitAdded.bind(this)\n    }\n\n    onChange(e: React.ChangeEvent<HTMLInputElement>) {\n        console.log(e.currentTarget.value);\n\n        this.setState({\n            ...this.state,\n            [e.currentTarget.name]: e.currentTarget.value\n        })\n    }\n\n    onOutfitAdded(event: React.KeyboardEvent<HTMLInputElement>) {\n        if (event.keyCode === 13) {\n            const { outfit_type_text, outfit_types } = this.state\n            outfit_types.push(event.currentTarget.value)\n            this.setState({\n                outfit_types\n            })\n            event.currentTarget.value = \"\"\n        }\n\n    }\n\n    async saveData(e: FormEvent<HTMLFormElement>) {\n        e.preventDefault()\n        const {\n            brand_name,\n            designer_name,\n            contact_number,\n            email,\n            start_price,\n            end_price,\n            outfit_types,\n            speciality,\n            location,\n            insta_link,\n            fb_link,\n            start_working_hours,\n            end_working_hours,\n            vendor_id\n        } = this.state\n\n        const data: DesignersI = {\n            brand_name,\n            designer_name,\n            contact_number,\n            email,\n            start_price,\n            end_price,\n            outfit_types,\n            speciality,\n            location,\n            insta_link,\n            fb_link,\n            start_working_hours,\n            end_working_hours,\n            vendor_id\n        }\n        if(outfit_types.length === 0){\n            this.setState({\n                error: \"Enter atleat one outfit type.\"\n            })\n            return \n        }\n        try {\n            const res = await MyHttp.post(\"/api/designer\", data)\n            if (res.status === 200) {\n                console.log(res.data);\n                this.setState({\n                    message: 'Added successfully.'\n                })\n                // @ts-ignore\n                document!.getElementById('my-form')!.reset()\n            } else {\n                this.setState({\n                    error: res.data.message\n                })\n            }\n\n        } catch (error) {\n            this.setState({\n                error: error.message\n            })\n        }\n    }\n\n    renderOutfits(): React.ReactNode {\n        const { outfit_types } = this.state\n        const out = outfit_types?.map((ot: string) => {\n            return <li key={ot}>{ot}</li>\n        })\n        return out\n    }\n\n\n    render() {\n        return (\n            <React.Fragment>\n                <MyNavBar />\n                <div className=\"container\">\n                    <div className=\"jumbotron\">\n                        <h1>Add</h1>\n                        <form onSubmit={this.saveData} id=\"my-form\">\n\n                            <MyInput label=\"Brand Name\" name=\"brand_name\" onChange={this.onChange} />\n                            <MyInput label=\"Designer Name\" name=\"designer_name\" onChange={this.onChange} />\n                            <MyInput label=\"Contact Number\" name=\"contact_number\" onChange={this.onChange} />\n                            <MyInput label=\"Email\" name=\"email\" onChange={this.onChange} />\n                            <MyInput label=\"Start Price\" name=\"start_price\" onChange={this.onChange} />\n                            <MyInput label=\"End Price\" name=\"end_price\" onChange={this.onChange} />\n                            <MyInput label=\"Outfit Types (hit enter to add)\" name=\"outfit_type_text\" required={false} onKeyDown={this.onOutfitAdded} onChange={this.onChange}/>\n                            <ol>\n                                {this.renderOutfits()}\n                            </ol>\n                            <MyInput label=\"Speciality\" name=\"speciality\" onChange={this.onChange} />\n                            <MyInput label=\"Location\" name=\"location\" onChange={this.onChange} />\n                            <MyInput label=\"Insta Link\" name=\"insta_link\" type=\"link\" onChange={this.onChange} />\n                            <MyInput label=\"Fb Link\" name=\"fb_link\" type=\"link\" onChange={this.onChange} />\n                            <MyInput label=\"Start Working Hours\" type=\"time\"  name=\"start_working_hours\" onChange={this.onChange} />\n                            <MyInput label=\"End Working Hours\" type=\"time\" name=\"end_working_hours\" onChange={this.onChange} />\n                            <button type=\"submit\" className=\"btn btn-success\">Submit</button>\n                            <p className=\"text-danger\">{this.state.error}</p>\n                            <p className=\"text-success\">{this.state.message}</p>\n\n                        </form>\n\n                    </div>\n                </div>\n            </React.Fragment>\n        )\n    }\n\n}\n\n/*\nconst AddFashionDesigner = () => {\n    const [brandName, setName] = useState('')\n    const [description, setDescription] = useState('')\n    const [entryProcedure, setEntryProcedure] = useState('')\n    const [exhibitionHouse, setExhibitionHouse] = useState('')\n    const [startDate, setStartDate] = useState('')\n    const [endDate, setEndDate] = useState('')\n    const [location, setLocation] = useState('')\n    const [error, setError] = useState('')\n    const [message, setMessage] = useState('')\n\n\n    async function submitData(e: FormEvent<HTMLFormElement>) {\n        e.preventDefault()\n        if (entryProcedure.trim() === '' && description.trim() === '') {\n            setError(\"Enter all details\")\n            return\n        }\n\n        const data = {\n            name,\n            description,\n            entryProcedure,\n            exhibitionHouse,\n            startDate,\n            endDate,\n            location,\n        }\n        try {\n            const res = await MyHttp.post(\"/api/event\", data)\n            if (res.status === 200) {\n                console.log(res.data);\n                setMessage('Added successfully.')\n                // @ts-ignore\n                document!.getElementById('my-form')!.reset()\n            } else {\n                setError(res.data.message)\n            }\n\n        } catch (error) {\n            setError(error.message)\n        }\n\n\n    }\n\n    return (\n        <React.Fragment>\n            <MyNavBar />\n            <div className=\"container\">\n                <div className=\"jumbotron\">\n                    <h1>Add</h1>\n                    <form onSubmit={submitData} id=\"my-form\">\n\n                        <MyInput label=\"Name\" onChange={(e: React.ChangeEvent<HTMLInputElement>) => setName(e.currentTarget.value)} />\n                        <MyTextArea label=\"Description\" onChange={(e: React.ChangeEvent<HTMLInputElement>) => setDescription(e.currentTarget.value)} />\n                        <MyTextArea label=\"Entry Procedure\" onChange={(e: React.ChangeEvent<HTMLInputElement>) => setEntryProcedure(e.currentTarget.value)} />\n                        <MyInput label=\"Exhibition House\" onChange={(e: React.ChangeEvent<HTMLInputElement>) => setExhibitionHouse(e.currentTarget.value)} />\n\n                        <MyInput label=\"Start Date\" type=\"date\" onChange={(e: React.ChangeEvent<HTMLInputElement>) => setStartDate(e.currentTarget.value)} />\n                        <MyInput label=\"End Date\" type=\"date\" onChange={(e: React.ChangeEvent<HTMLInputElement>) => setEndDate(e.currentTarget.value)} />\n                        <MyInput label=\"Location\" onChange={(e: React.ChangeEvent<HTMLInputElement>) => setLocation(e.currentTarget.value)} />\n                        <button type=\"submit\" className=\"btn btn-success\">Submit</button>\n                        <p className=\"text-danger\">{error}</p>\n                        <p className=\"text-success\">{message}</p>\n\n                    </form>\n\n                </div>\n            </div>\n        </React.Fragment>\n\n    )\n}\n*/","import React from 'react';\nimport './App.css';\nimport { Switch, Route, Router } from 'react-router-dom';\nimport Login from './components/pages/login';\nimport CreateAdmin from './components/pages/admin/create-admin';\nimport Home from './components/pages/home';\nimport Logout from './components/pages/logout';\nimport ViewAdmin from './components/pages/admin/view-admin';\nimport AddEvent from './components/pages/event/add-event';\nimport history from './components/history';\nimport ViewEvent from './components/pages/event/view-event';\nimport AddVendor from './components/pages/vendor/add-vendor';\nimport ViewVendor from './components/pages/vendor/view-vendor';\nimport VendorDetail from './components/pages/vendor/vendor-detail';\nimport AddFashionDesigner from './components/pages/fashion-designer/add-fashion-designer';\n\nfunction App() {\n  \n  return (\n    <Router history={history}>\n      <Route exact path=\"/\" component={Login} />\n      <Route exact path=\"/home\" component={Home} />\n      <Route exact path=\"/logout\" component={Logout} />\n      <Route exact path=\"/admin/create\" component={CreateAdmin} />\n      <Route exact path=\"/admin/view\" component={ViewAdmin} />\n      <Route exact path=\"/event/create\" component={AddEvent} />\n      <Route exact path=\"/event/view\" component={ViewEvent} />\n      <Route exact path=\"/vendor/create\" component={AddVendor} />\n      <Route exact path=\"/vendor/view\" component={ViewVendor} />\n      <Route exact path=\"/vendor/detail/:id\" component={VendorDetail} />\n      <Route exact path=\"/designer/create/:id\" component={AddFashionDesigner} />\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from \"react-router-dom\"\n\nReactDOM.render(\n    <BrowserRouter>\n        <App />\n    </BrowserRouter>,\n    document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}